ceph_conf_overrides:
  - section: global
    option: osd crush chooseleaf type
    value: 0
  - section: mon
    option: auth allow insecure global id reclaim
    value: false

kubernetes_keepalived_interface: eth0

cilium_helm_values:
  operator:
    replicas: 1

csi_driver: local-path-provisioner

ceph_csi_rbd_helm_values:
  provisioner:
    replicaCount: 1

cluster_issuer_type: self-signed

ingress_nginx_helm_values:
  controller:
    config:
      worker-processes: 2

percona_xtradb_cluster_spec:
  allowUnsafeConfigurations: true
  pxc:
    size: 1
  haproxy:
    size: 1

rabbitmq_spec:
  resources:
    requests:
      cpu: 250m
      memory: 256Mi

keystone_helm_values:
  pod:
    replicas:
      api: 1

barbican_helm_values:
  pod:
    replicas:
      api: 1

rook_ceph_cluster_radosgw_spec:
  metadataPool:
    failureDomain: osd
  dataPool:
    failureDomain: osd
  gateway:
    instances: 1

glance_helm_values:
  storage: pvc
  conf:
    glance:
      DEFAULT:
        workers: 2
  pod:
    replicas:
      api: 1
  volume:
    size: 80Gi
glance_images:
  - name: cirros
    url: http://download.cirros-cloud.net/0.6.1/cirros-0.6.1-x86_64-disk.img
    min_disk: 1
    disk_format: qcow2
    container_format: bare
    is_public: true

cinder_helm_values:
  dependencies:
    static:
      api:
        jobs:
          - cinder-db-sync
          - cinder-ks-user
          - cinder-ks-endpoints
          - cinder-rabbit-init
      scheduler:
        jobs:
          - cinder-db-sync
          - cinder-ks-user
          - cinder-ks-endpoints
          - cinder-rabbit-init
      bootstrap:
        pod: []
  pod:
    replicas:
      api: 1
      scheduler: 1
  manifests:
    deployment_backup: false
    deployment_volume: false
    job_storage_init: false
    job_backup_storage_init: false

placement_helm_values:
  pod:
    replicas:
      api: 1

coredns_helm_values:
  replicaCount: 1

atmosphere_network_backend: "{{ lookup('env', 'ATMOSPHERE_NETWORK_BACKEND') | default('ovn', True) }}"
ovn_helm_values:
  conf:
    auto_bridge_add:
      br-ex: eth1
  pod:
    replicas:
      ovn_ovsdb_nb: 1
      ovn_ovsdb_sb: 1
      ovn_northd: 1
  manifests:
    # NOTE(mnaser): Since the controller is running on the same node as
    #               the Kubernetes control plane, we need to disable
    #               the daemonset.
    daemonset_ovn_controller: false

libvirt_helm_values:
  conf:
    ceph:
      enabled: false

nova_helm_values:
  conf:
    ceph:
      enabled: false
    nova:
      DEFAULT:
        osapi_compute_workers: 2
        metadata_workers: 2
      conductor:
        workers: 2
      scheduler:
        workers: 2
  pod:
    replicas:
      api_metadata: 1
      osapi: 1
      conductor: 1
      scheduler: 1
      novncproxy: 1
      spiceproxy: 1

neutron_helm_values:
  conf:
    auto_bridge_add:
      br-ex: eth1
    neutron:
      DEFAULT:
        api_workers: 2
        rpc_workers: 2
        metadata_workers: 2
  pod:
    replicas:
      server: 1

octavia_amphora_image_disk_format: qcow2
octavia_helm_values:
  conf:
    octavia:
      controller_worker:
        volume_driver: volume_noop_driver
  pod:
    replicas:
      api: 1
      worker: 1
      housekeeping: 1

magnum_image_disk_format: qcow2
magnum_helm_values:
  pod:
    replicas:
      api: 1
      conductor: 1
magnum_images:
  - name: ubuntu-2204-kube-v1.27.3
    distro: ubuntu
    url: https://object-storage.public.mtl1.vexxhost.net/swift/v1/a91f106f55e64246babde7402c21b87a/magnum-capi/ubuntu-2204-kube-v1.27.3.qcow2

horizon_helm_values:
  pod:
    replicas:
      server: 1

tempest_helm_values:
  conf:
    tempest:
      service_available:
        horizon: false
